# Generated by Django 2.0 on 2018-05-15 12:34

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Backends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_index', models.CharField(max_length=200)),
                ('enriched_index', models.CharField(max_length=200)),
                ('no_archive', models.CharField(max_length=200)),
                ('api_token', models.CharField(max_length=200)),
                ('sleep_time', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Es_Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('arthur', models.CharField(max_length=200)),
                ('arthur_url', models.CharField(max_length=200)),
                ('redis_url', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Es_Enrichment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('autorefresh', models.CharField(max_length=200)),
                ('studies', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Phases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.CharField(max_length=200)),
                ('identities', models.CharField(max_length=200)),
                ('enrichment', models.CharField(max_length=200)),
                ('panles', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Setup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=200, unique=True)),
                ('update', models.CharField(max_length=200)),
                ('min_update_delay', models.IntegerField()),
                ('debug', models.CharField(max_length=200)),
                ('logs_dir', models.CharField(max_length=200)),
                ('projects_file', models.CharField(max_length=200)),
                ('backends', models.ManyToManyField(to='dashboard.Backends')),
                ('es_collection', models.ManyToManyField(to='dashboard.Es_Collection')),
                ('es_enrichment', models.ManyToManyField(to='dashboard.Es_Enrichment')),
                ('phases', models.ManyToManyField(to='dashboard.Phases')),
            ],
        ),
        migrations.CreateModel(
            name='Sortinghat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=200)),
                ('user', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('database', models.CharField(max_length=200)),
                ('load_orgs', models.CharField(max_length=200)),
                ('orgs_file', models.CharField(max_length=200)),
                ('autoprofile', models.CharField(max_length=200)),
                ('matching', models.CharField(max_length=200)),
                ('sleep_for', models.IntegerField()),
                ('bots_names', models.CharField(max_length=200)),
                ('unaffiliated_group', models.CharField(max_length=200)),
                ('affiliate', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='setup',
            name='sortinghat',
            field=models.ManyToManyField(to='dashboard.Sortinghat'),
        ),
    ]
